# ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà                   ‚ñà‚ñà‚ñà‚ñà‚ñà      ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà                                                                ‚ñà‚ñà‚ñà‚ñà‚ñà     
#‚ñë‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà                   ‚ñë‚ñë‚ñà‚ñà‚ñà      ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà                                                              ‚ñë‚ñë‚ñà‚ñà‚ñà      
# ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà             ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  
# ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà 
# ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë   ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñë ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñë  ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà 
# ‚ñë‚ñà‚ñà‚ñà    ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà    ‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà              ‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà  ‚ñë‚ñà‚ñà‚ñà     ‚ñë‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà ‚ñë‚ñà‚ñà‚ñà 
# ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà              ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà    ‚ñë‚ñë‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà
#‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë   ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë    ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë     ‚ñë‚ñë‚ñë‚ñë‚ñë                ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë      ‚ñë‚ñë‚ñë‚ñë‚ñë‚ñë  ‚ñë‚ñë‚ñë‚ñë ‚ñë‚ñë‚ñë‚ñë‚ñë                                                                                                                                 
# meta developer: @wiley_station
# meta icon: https://example.com/moodmirror_icon.png
# meta banner: https://example.com/moodmirror_banner.png

import logging
import random
from .. import loader, utils

__version__ = (0, 0, 1)

logger = logging.getLogger(__name__)

@loader.tds
class MoodMirror(loader.Module):
    """–û—Ç—Ä–∞–∂–∞–µ—Ç —Ç–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —ç–º–æ–¥–∑–∏ –∏ —Ü–∏—Ç–∞—Ç—ã"""

    strings = {
        "name": "MoodMirror",
        "mood_detected": "üåü –¢–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood}\n{emoji} {quote}",
        "no_mood": "ü§î –Ø –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è–ª —Ç–≤–æ–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!",
        "mood_reset": "üßπ –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω.",
    }

    strings_ru = {
        "name": "MoodMirror",
        "mood_detected": "üåü –¢–≤–æ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ: {mood}\n{emoji} {quote}",
        "no_mood": "ü§î –Ø –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è–ª —Ç–≤–æ–µ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è. –ù–∞–ø–∏—à–∏ —á—Ç–æ-–Ω–∏–±—É–¥—å!",
        "mood_reset": "üßπ –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è —Å–±—Ä–æ—à–µ–Ω.",
    }

    def __init__(self):
        self.mood_history = []
        self.moods = {
            "—Ä–∞–¥–æ—Å—Ç—å": {
                "words": ["–∫—Ä—É—Ç–æ", "–∫–ª–∞—Å—Å", "–∑–¥–æ—Ä–æ–≤–æ", "—Å—É–ø–µ—Ä", "—Ä–∞–¥", "–≤–µ—Å–µ–ª–æ", "—É—Ä–∞", "–æ—Ç–ª–∏—á–Ω–æ", "–ø—Ä–∞–∑–¥–Ω–∏–∫", "—Å—á–∞—Å—Ç—å–µ", "–ø–æ–∑–∏—Ç–∏–≤", "–≤–æ—Å—Ç–æ—Ä–≥"],
                "emojis": ["üòä", "üéâ", "üåû", "‚ú®", "ü•≥"],
                "quotes": [
                    "–°—á–∞—Å—Ç—å–µ ‚Äî —ç—Ç–æ –∫–æ–≥–¥–∞ –¥—É—à–∞ —Ç–∞–Ω—Ü—É–µ—Ç!",
                    "–£–ª—ã–±–∫–∞ ‚Äî —Ç–≤–æ–π –ª—É—á—à–∏–π –∞–∫—Å–µ—Å—Å—É–∞—Ä.",
                    "–ñ–∏–∑–Ω—å –ø—Ä–µ–∫—Ä–∞—Å–Ω–∞, –∫–æ–≥–¥–∞ —Ç—ã –≤ –¥–µ–ª–µ!",
                    "–°–≤–µ—Ç–∏ —è—Ä—á–µ —Å–æ–ª–Ω—Ü–∞!"
                ]
            },
            "–≥—Ä—É—Å—Ç—å": {
                "words": ["–≥—Ä—É—Å—Ç–Ω–æ", "–ø–ª–æ—Ö–æ", "–∂–∞–ª—å", "—Ç–æ—Å–∫–∞", "–ø–µ—á–∞–ª—å", "—Å–ª–µ–∑—ã", "–æ–¥–∏–Ω–æ–∫–æ", "—Ö—Ä–µ–Ω–æ–≤–æ", "—É–ø–∞–ª", "—Ä–∞–∑–±–∏—Ç"],
                "emojis": ["üòî", "üåßÔ∏è", "üíß", "ü•Ä", "üò¢"],
                "quotes": [
                    "–î–æ–∂–¥—å –ø—Ä–æ–π–¥–µ—Ç, –∏ —Å–æ–ª–Ω—Ü–µ –≤—ã–≥–ª—è–Ω–µ—Ç —Å–Ω–æ–≤–∞.",
                    "–ò–Ω–æ–≥–¥–∞ —Ç–∏—à–∏–Ω–∞ –≥–æ–≤–æ—Ä–∏—Ç –≥—Ä–æ–º—á–µ —Å–ª–æ–≤.",
                    "–í—Å–µ –ø—Ä–æ—Ö–æ–¥–∏—Ç, –∏ —ç—Ç–æ —Ç–æ–∂–µ –ø—Ä–æ–π–¥–µ—Ç.",
                    "–ì—Ä—É—Å—Ç—å ‚Äî —ç—Ç–æ —Ç–µ–Ω—å –ø–µ—Ä–µ–¥ —Å–≤–µ—Ç–æ–º."
                ]
            },
            "—É—Å—Ç–∞–ª–æ—Å—Ç—å": {
                "words": ["—É—Å—Ç–∞–ª", "–≤—ã–¥–æ—Ö—Å—è", "—Å–ø–∞—Ç—å", "–Ω–∞–¥–æ–µ–ª–æ", "–ª–µ–Ω—å", "–Ω–µ—Ç —Å–∏–ª", "—É—Ç–æ–º–∏–ª—Å—è", "–≤—ã–∂–∞—Ç", "—Å–æ–Ω–Ω—ã–π", "–∫–∞–ø–µ—Ü"],
                "emojis": ["üò¥", "ü•±", "üõå", "üò©", "üí§"],
                "quotes": [
                    "–û—Ç–¥—ã—Ö ‚Äî —ç—Ç–æ —Ç–æ–∂–µ –∏—Å–∫—É—Å—Å—Ç–≤–æ.",
                    "–°–æ–Ω ‚Äî –ª—É—á—à–∏–π –ª–µ–∫–∞—Ä—å.",
                    "–ü–æ—Ä–∞ –¥–∞—Ç—å —Å–µ–±–µ –ø–µ—Ä–µ–¥—ã—à–∫—É.",
                    "–¢–∏—à–∏–Ω–∞ –ª–µ—á–∏—Ç —É—Å—Ç–∞–ª–æ—Å—Ç—å."
                ]
            },
            "–∑–ª–æ—Å—Ç—å": {
                "words": ["–±–µ—Å–∏—Ç", "–∑–ª—é—Å—å", "—Ä–∞–∑–¥—Ä–∞–∂–∞–µ—Ç", "—Ñ—É", "–¥–æ—Å—Ç–∞–ª–∏", "–Ω–µ—Ä–≤—ã", "–±–µ–¥–∞", "–∑–ª–æ–π", "–≥–Ω–µ–≤", "–≤–∑—Ä—ã–≤"],
                "emojis": ["üò°", "üî•", "üí¢", "üëø", "üò§"],
                "quotes": [
                    "–ì–Ω–µ–≤ ‚Äî —ç—Ç–æ –≤–µ—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –≥–∞—Å–∏—Ç —Å–≤–µ—á–∏ —Ä–∞–∑—É–º–∞.",
                    "–í—ã–¥–æ—Ö–Ω–∏ –∏ –æ—Ç–ø—É—Å—Ç–∏.",
                    "–¢—ã —Å–∏–ª—å–Ω–µ–µ —Å–≤–æ–µ–≥–æ —Ä–∞–∑–¥—Ä–∞–∂–µ–Ω–∏—è.",
                    "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ ‚Äî —Ç–≤–æ–π —â–∏—Ç."
                ]
            },
            "—Å–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ": {
                "words": ["—Å–ø–æ–∫–æ–π–Ω–æ", "—Ç–∏—Ö–æ", "–º–∏—Ä", "—Ä–µ–ª–∞–∫—Å", "—Ö–æ—Ä–æ—à–æ", "—É—é—Ç", "–≥–∞—Ä–º–æ–Ω–∏—è", "–±–∞–ª–∞–Ω—Å"],
                "emojis": ["üßò", "üåô", "üåø", "‚òï", "üåä"],
                "quotes": [
                    "–¢–∏—à–∏–Ω–∞ ‚Äî —ç—Ç–æ –º—É–∑—ã–∫–∞ –¥—É—à–∏.",
                    "–°–ø–æ–∫–æ–π—Å—Ç–≤–∏–µ ‚Äî —Å–∏–ª–∞ –≤–Ω—É—Ç—Ä–∏.",
                    "–ú–∏—Ä –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å —Ç–µ–±—è.",
                    "–î—ã—à–∏ –≥–ª—É–±–∂–µ, –≤—Å–µ –≤ –ø–æ—Ä—è–¥–∫–µ."
                ]
            }
        }

    def analyze_mood(self, text):
        """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"""
        text = text.lower()
        for mood, data in self.moods.items():
            if any(word in text for word in data["words"]):
                return mood
        return None

    def get_mood_response(self, mood):
        """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–≤–µ—Ç —Å —ç–º–æ–¥–∑–∏ –∏ —Ü–∏—Ç–∞—Ç–æ–π"""
        if mood not in self.moods:
            return None
        data = self.moods[mood]
        emoji = random.choice(data["emojis"])
        quote = random.choice(data["quotes"])
        return {"mood": mood, "emoji": emoji, "quote": quote}

    @loader.watcher("out", only_messages=True)
    async def watcher(self, message):
        """–°–ª–µ–¥–∏—Ç –∑–∞ —Ç–≤–æ–∏–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"""
        if message.sender_id != (await self._client.get_me()).id:
            return
        mood = self.analyze_mood(message.text)
        if mood:
            self.mood_history.append(mood)
            if len(self.mood_history) > 10:  # –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é
                self.mood_history.pop(0)

    @loader.command(ru_doc="–ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ")
    async def mood(self, message):
        """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–∫—É—â–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ"""
        if not self.mood_history:
            await utils.answer(message, self.strings["no_mood"])
            return

        # –ë–µ—Ä–µ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ
        latest_mood = self.mood_history[-1]
        response = self.get_mood_response(latest_mood)
        if response:
            await utils.answer(message, self.strings["mood_detected"].format(**response))

    @loader.command(ru_doc="–°–±—Ä–æ—Å–∏—Ç—å –∞–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è")
    async def moodreset(self, message):
        """–°–±—Ä–∞—Å—ã–≤–∞–µ—Ç –∏—Å—Ç–æ—Ä–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è"""
        self.mood_history = []
        await utils.answer(message, self.strings["mood_reset"])